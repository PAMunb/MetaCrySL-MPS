package MetaCrySL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAggregateList = createDescriptorForAggregateList();
  /*package*/ final ConceptDescriptor myConceptBasicEventExp = createDescriptorForBasicEventExp();
  /*package*/ final ConceptDescriptor myConceptChoiceExp = createDescriptorForChoiceExp();
  /*package*/ final ConceptDescriptor myConceptConstraintSpec = createDescriptorForConstraintSpec();
  /*package*/ final ConceptDescriptor myConceptEnsuresSpec = createDescriptorForEnsuresSpec();
  /*package*/ final ConceptDescriptor myConceptEventAggregate = createDescriptorForEventAggregate();
  /*package*/ final ConceptDescriptor myConceptEventExp = createDescriptorForEventExp();
  /*package*/ final ConceptDescriptor myConceptEventMethod = createDescriptorForEventMethod();
  /*package*/ final ConceptDescriptor myConceptEventRef = createDescriptorForEventRef();
  /*package*/ final ConceptDescriptor myConceptEventSpec = createDescriptorForEventSpec();
  /*package*/ final ConceptDescriptor myConceptFormalArg = createDescriptorForFormalArg();
  /*package*/ final ConceptDescriptor myConceptFormalArgList = createDescriptorForFormalArgList();
  /*package*/ final ConceptDescriptor myConceptIConstraintContent = createDescriptorForIConstraintContent();
  /*package*/ final ConceptDescriptor myConceptIEnsureContent = createDescriptorForIEnsureContent();
  /*package*/ final ConceptDescriptor myConceptIEventSpecContent = createDescriptorForIEventSpecContent();
  /*package*/ final ConceptDescriptor myConceptIModelContent = createDescriptorForIModelContent();
  /*package*/ final ConceptDescriptor myConceptIObjectsContent = createDescriptorForIObjectsContent();
  /*package*/ final ConceptDescriptor myConceptIOrderSpecContent = createDescriptorForIOrderSpecContent();
  /*package*/ final ConceptDescriptor myConceptIRequiresContent = createDescriptorForIRequiresContent();
  /*package*/ final ConceptDescriptor myConceptMethodDef = createDescriptorForMethodDef();
  /*package*/ final ConceptDescriptor myConceptModel = createDescriptorForModel();
  /*package*/ final ConceptDescriptor myConceptNegatesSpec = createDescriptorForNegatesSpec();
  /*package*/ final ConceptDescriptor myConceptObject = createDescriptorForObject();
  /*package*/ final ConceptDescriptor myConceptObjectSpec = createDescriptorForObjectSpec();
  /*package*/ final ConceptDescriptor myConceptObjectTypeParam = createDescriptorForObjectTypeParam();
  /*package*/ final ConceptDescriptor myConceptOneOrMore = createDescriptorForOneOrMore();
  /*package*/ final ConceptDescriptor myConceptOptional = createDescriptorForOptional();
  /*package*/ final ConceptDescriptor myConceptOrderSpec = createDescriptorForOrderSpec();
  /*package*/ final ConceptDescriptor myConceptPrimaryExp = createDescriptorForPrimaryExp();
  /*package*/ final ConceptDescriptor myConceptQualifiedFormalArg = createDescriptorForQualifiedFormalArg();
  /*package*/ final ConceptDescriptor myConceptQualifiedName = createDescriptorForQualifiedName();
  /*package*/ final ConceptDescriptor myConceptRequiresSpec = createDescriptorForRequiresSpec();
  /*package*/ final ConceptDescriptor myConceptSequenceExp = createDescriptorForSequenceExp();
  /*package*/ final ConceptDescriptor myConceptSpec = createDescriptorForSpec();
  /*package*/ final ConceptDescriptor myConceptSpecContent = createDescriptorForSpecContent();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptWildcardArgument = createDescriptorForWildcardArgument();
  /*package*/ final ConceptDescriptor myConceptZeroOrMore = createDescriptorForZeroOrMore();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeID = new ConstrainedStringDatatypeDescriptorImpl(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb73bL, "ID", "r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/2159885266397935419", "(?<head>[a-zA-Z_])(?<tail>([a-zA-Z0-9_])+)");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAggregateList, myConceptBasicEventExp, myConceptChoiceExp, myConceptConstraintSpec, myConceptEnsuresSpec, myConceptEventAggregate, myConceptEventExp, myConceptEventMethod, myConceptEventRef, myConceptEventSpec, myConceptFormalArg, myConceptFormalArgList, myConceptIConstraintContent, myConceptIEnsureContent, myConceptIEventSpecContent, myConceptIModelContent, myConceptIObjectsContent, myConceptIOrderSpecContent, myConceptIRequiresContent, myConceptMethodDef, myConceptModel, myConceptNegatesSpec, myConceptObject, myConceptObjectSpec, myConceptObjectTypeParam, myConceptOneOrMore, myConceptOptional, myConceptOrderSpec, myConceptPrimaryExp, myConceptQualifiedFormalArg, myConceptQualifiedName, myConceptRequiresSpec, myConceptSequenceExp, myConceptSpec, myConceptSpecContent, myConceptType, myConceptWildcardArgument, myConceptZeroOrMore);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AggregateList:
        return myConceptAggregateList;
      case LanguageConceptSwitch.BasicEventExp:
        return myConceptBasicEventExp;
      case LanguageConceptSwitch.ChoiceExp:
        return myConceptChoiceExp;
      case LanguageConceptSwitch.ConstraintSpec:
        return myConceptConstraintSpec;
      case LanguageConceptSwitch.EnsuresSpec:
        return myConceptEnsuresSpec;
      case LanguageConceptSwitch.EventAggregate:
        return myConceptEventAggregate;
      case LanguageConceptSwitch.EventExp:
        return myConceptEventExp;
      case LanguageConceptSwitch.EventMethod:
        return myConceptEventMethod;
      case LanguageConceptSwitch.EventRef:
        return myConceptEventRef;
      case LanguageConceptSwitch.EventSpec:
        return myConceptEventSpec;
      case LanguageConceptSwitch.FormalArg:
        return myConceptFormalArg;
      case LanguageConceptSwitch.FormalArgList:
        return myConceptFormalArgList;
      case LanguageConceptSwitch.IConstraintContent:
        return myConceptIConstraintContent;
      case LanguageConceptSwitch.IEnsureContent:
        return myConceptIEnsureContent;
      case LanguageConceptSwitch.IEventSpecContent:
        return myConceptIEventSpecContent;
      case LanguageConceptSwitch.IModelContent:
        return myConceptIModelContent;
      case LanguageConceptSwitch.IObjectsContent:
        return myConceptIObjectsContent;
      case LanguageConceptSwitch.IOrderSpecContent:
        return myConceptIOrderSpecContent;
      case LanguageConceptSwitch.IRequiresContent:
        return myConceptIRequiresContent;
      case LanguageConceptSwitch.MethodDef:
        return myConceptMethodDef;
      case LanguageConceptSwitch.Model:
        return myConceptModel;
      case LanguageConceptSwitch.NegatesSpec:
        return myConceptNegatesSpec;
      case LanguageConceptSwitch.Object:
        return myConceptObject;
      case LanguageConceptSwitch.ObjectSpec:
        return myConceptObjectSpec;
      case LanguageConceptSwitch.ObjectTypeParam:
        return myConceptObjectTypeParam;
      case LanguageConceptSwitch.OneOrMore:
        return myConceptOneOrMore;
      case LanguageConceptSwitch.Optional:
        return myConceptOptional;
      case LanguageConceptSwitch.OrderSpec:
        return myConceptOrderSpec;
      case LanguageConceptSwitch.PrimaryExp:
        return myConceptPrimaryExp;
      case LanguageConceptSwitch.QualifiedFormalArg:
        return myConceptQualifiedFormalArg;
      case LanguageConceptSwitch.QualifiedName:
        return myConceptQualifiedName;
      case LanguageConceptSwitch.RequiresSpec:
        return myConceptRequiresSpec;
      case LanguageConceptSwitch.SequenceExp:
        return myConceptSequenceExp;
      case LanguageConceptSwitch.Spec:
        return myConceptSpec;
      case LanguageConceptSwitch.SpecContent:
        return myConceptSpecContent;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.WildcardArgument:
        return myConceptWildcardArgument;
      case LanguageConceptSwitch.ZeroOrMore:
        return myConceptZeroOrMore;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myCSDatatypeID);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAggregateList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "AggregateList", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb78aL);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/2159885266397935498");
    b.version(2);
    b.aggregate("events", 0x3ac8e6d3fc52116fL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc52116cL).optional(false).ordered(true).multiple(true).origin("4235889247687676271").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBasicEventExp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "BasicEventExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a4348efL);
    b.class_(false, true, false);
    b.super_("MetaCrySL.structure.EventExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a3e5e4eL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4144233796495165679");
    b.version(2);
    b.aggregate("exp", 0x398346ae4a4348f1L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a4fb658L).optional(false).ordered(true).multiple(false).origin("4144233796495165681").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChoiceExp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "ChoiceExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a3e5e4bL);
    b.class_(false, false, false);
    b.super_("MetaCrySL.structure.EventExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a3e5e4eL);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa48770b3L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4144233796494843467");
    b.version(2);
    b.aggregate("left", 0x398346ae4a3e5e51L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a3e5e4eL).optional(false).ordered(true).multiple(false).origin("4144233796494843473").done();
    b.aggregate("right", 0x398346ae4a3e5e53L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a3e5e4eL).optional(false).ordered(true).multiple(false).origin("4144233796494843475").done();
    b.alias("|");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "ConstraintSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x38bdb626f91808b8L);
    b.class_(false, false, false);
    b.super_("MetaCrySL.structure.SpecContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb41c7b7L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4088624315226392760");
    b.version(2);
    b.aggregate("constraints", 0x5b2eb88ae87d1513L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb733L).optional(true).ordered(true).multiple(true).origin("6570391813125641491").done();
    b.alias("CONSTRAINTS");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnsuresSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "EnsuresSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x38bdb626f9180996L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4088624315226392982");
    b.version(2);
    b.aggregate("content", 0xdf0d74c973eaa99L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb739L).optional(true).ordered(true).multiple(true).origin("1004539440858573465").done();
    b.alias("ENSURES");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventAggregate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "EventAggregate", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x2cacad8f8a455d07L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c209L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/3219138665674792199");
    b.version(2);
    b.aggregate("aggregate", 0x1b51b988bd4ce8ddL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb78aL).optional(true).ordered(true).multiple(true).origin("1968558509080242397").done();
    b.alias("EventAggregate");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventExp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "EventExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a3e5e4eL);
    b.class_(false, true, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4144233796494843470");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventMethod() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "EventMethod", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x2cacad8f8a455d04L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c209L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/3219138665674792196");
    b.version(2);
    b.aggregate("method", 0x6a7299853d07fdceL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb789L).optional(true).ordered(true).multiple(false).origin("7670361912899009998").done();
    b.alias("EventMethod");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "EventRef", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc52116cL);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4235889247687676268");
    b.version(2);
    b.associate("ref", 0x3ac8e6d3fc52116dL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c209L).optional(false).origin("4235889247687676269").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "EventSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c1ffL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/8598353117207511551");
    b.version(2);
    b.aggregate("content", 0x77537c9aa486c226L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c209L).optional(true).ordered(true).multiple(true).origin("8598353117207511590").done();
    b.alias("EVENTS");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFormalArg() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "FormalArg", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc41821dL);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4235889247686810452");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFormalArgList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "FormalArgList", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc418235L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4235889247686591029");
    b.version(2);
    b.aggregate("args", 0x3ac8e6d3fc43191dL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc41821dL).optional(true).ordered(true).multiple(true).origin("4235889247686695197").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIConstraintContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IConstraintContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb733L);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/2159885266397935416");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIEnsureContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IEnsureContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb739L);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/2159885266397935417");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIEventSpecContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IEventSpecContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c209L);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/8598353117207511561");
    b.version(2);
    b.property("label", 0x5b2eb88ae86d20ddL).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb73bL)).origin("6570391813124595933").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIModelContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IModelContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b7e3cL);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/5292687979099946556");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIObjectsContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IObjectsContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53be40fL);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/5292687979099972623");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIOrderSpecContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IOrderSpecContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa48770b3L);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/8598353117207556275");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIRequiresContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IRequiresContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb73aL);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/2159885266397935418");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMethodDef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "MethodDef", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb789L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/2159885266397935497");
    b.version(2);
    b.property("label", 0x3ac8e6d3fc41821eL).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb73bL)).origin("4235889247686591006").done();
    b.aggregate("args", 0x3ac8e6d3fc41821bL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc418235L).optional(false).ordered(true).multiple(false).origin("4235889247686591003").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Model", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x379a88c795f4c97eL);
    b.class_(false, true, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4006665209295202465");
    b.version(2);
    b.alias("Model");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNegatesSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "NegatesSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x38bdb626f918de70L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4088624315226447472");
    b.version(2);
    b.aggregate("content", 0xdf0d74c9744b3cfL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb739L).optional(true).ordered(true).multiple(true).origin("1004539440858969039").done();
    b.alias("NEGATES");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObject() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Object", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x6fe8a826085f2877L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53be40fL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/8063880014109550711");
    b.version(2);
    b.property("name", 0x6fe8a826085f287eL).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb73bL)).origin("8063880014109550718").done();
    b.aggregate("objectType", 0x6fe8a826085f2880L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc25dc2aL).optional(false).ordered(true).multiple(false).origin("8063880014109550720").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObjectSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "ObjectSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b99c1L);
    b.class_(false, false, false);
    b.super_("MetaCrySL.structure.SpecContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb41c7b7L);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b7e3cL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/5292687979099953601");
    b.version(2);
    b.aggregate("contents", 0x497367acd53be42aL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53be40fL).optional(true).ordered(true).multiple(true).origin("5292687979099972650").done();
    b.alias("OBJECTS");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObjectTypeParam() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "ObjectTypeParam", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e69f583L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/9111215912465855875");
    b.version(2);
    b.property("type", 0x7e718a995e69f598L).type(PrimitiveTypeId.STRING).origin("9111215912465855896").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOneOrMore() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "OneOrMore", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a43582bL);
    b.class_(false, false, false);
    b.super_("MetaCrySL.structure.BasicEventExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a4348efL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4144233796495169579");
    b.version(2);
    b.alias("+");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOptional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Optional", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a4348ecL);
    b.class_(false, false, false);
    b.super_("MetaCrySL.structure.BasicEventExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a4348efL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4144233796495165676");
    b.version(2);
    b.alias("?");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrderSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "OrderSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa48770aeL);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b7e3cL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/8598353117207556270");
    b.version(2);
    b.aggregate("content", 0x77537c9aa48770b1L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa48770b3L).optional(true).ordered(true).multiple(true).origin("8598353117207556273").done();
    b.alias("ORDER");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrimaryExp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "PrimaryExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a4fb658L);
    b.class_(false, false, false);
    b.super_("MetaCrySL.structure.EventExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a3e5e4eL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4144233796495980120");
    b.version(2);
    b.aggregate("event", 0x398346ae4a4fb659L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc52116cL).optional(true).ordered(true).multiple(false).origin("4144233796495980121").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQualifiedFormalArg() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "QualifiedFormalArg", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc44db55L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc41821dL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4235889247686810453");
    b.version(2);
    b.property("argument", 0x3ac8e6d3fc44db56L).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb73bL)).origin("4235889247686810454").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQualifiedName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "QualifiedName", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x379a88c795f4e8bdL);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4006665209295202493");
    b.version(2);
    b.property("name", 0x78aeadf61b0e351L).type(PrimitiveTypeId.STRING).origin("543504950189155153").done();
    b.alias("JavaQualifiedName");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRequiresSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "RequiresSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x38bdb626f9180931L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4088624315226392881");
    b.version(2);
    b.aggregate("content", 0x68f5a8c2fe8a5881L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb3fb73aL).optional(true).ordered(true).multiple(true).origin("7563136704686217345").done();
    b.alias("REQUIRES");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSequenceExp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "SequenceExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a3e5e48L);
    b.class_(false, false, false);
    b.super_("MetaCrySL.structure.EventExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a3e5e4eL);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa48770b3L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4144233796494843464");
    b.version(2);
    b.aggregate("left", 0x398346ae4a4771cfL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a3e5e4eL).optional(false).ordered(true).multiple(false).origin("4144233796495438287").done();
    b.aggregate("right", 0x398346ae4a4771d1L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a3e5e4eL).optional(false).ordered(true).multiple(false).origin("4144233796495438289").done();
    b.alias(",");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Spec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3063bd30217d1129L);
    b.class_(false, false, true);
    b.super_("MetaCrySL.structure.Model", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x379a88c795f4c97eL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/9111215912465734338");
    b.version(2);
    b.property("ABSTRACT", 0x497367acd53c2433L).type(PrimitiveTypeId.BOOLEAN).origin("5292687979099989043").done();
    b.aggregate("objects", 0x77537c9aa4898d17L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b99c1L).optional(false).ordered(true).multiple(false).origin("8598353117207694615").done();
    b.aggregate("events", 0x38bdb626f9180837L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c1ffL).optional(false).ordered(true).multiple(false).origin("4088624315226392631").done();
    b.aggregate("order", 0x38bdb626f918089fL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa48770aeL).optional(false).ordered(true).multiple(false).origin("4088624315226392735").done();
    b.aggregate("adicional", 0x398346ae4a5901a9L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb41c7b7L).optional(true).ordered(true).multiple(true).origin("4144233796496589225").done();
    b.alias("SPEC");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpecContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "SpecContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1df97434cb41c7b7L);
    b.class_(false, true, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/2159885266398070711");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Type", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc25dc2aL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4235889247684779050");
    b.version(2);
    b.aggregate("name", 0x3ac8e6d3fc25dc37L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x379a88c795f4e8bdL).optional(false).ordered(true).multiple(false).origin("4235889247684779063").done();
    b.aggregate("generic", 0x3ac8e6d3fc28cc32L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x379a88c795f4e8bdL).optional(true).ordered(true).multiple(false).origin("4235889247684971570").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWildcardArgument() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "WildcardArgument", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc44db7dL);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3ac8e6d3fc41821dL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4235889247686810493");
    b.version(2);
    b.alias("_");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForZeroOrMore() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "ZeroOrMore", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a43582aL);
    b.class_(false, false, false);
    b.super_("MetaCrySL.structure.BasicEventExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x398346ae4a4348efL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4144233796495169578");
    b.version(2);
    b.alias("*");
    return b.create();
  }
}
