package MetaCrySL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAggregateList = createDescriptorForAggregateList();
  /*package*/ final ConceptDescriptor myConceptAtomicContraintExp = createDescriptorForAtomicContraintExp();
  /*package*/ final ConceptDescriptor myConceptBaseSpecType = createDescriptorForBaseSpecType();
  /*package*/ final ConceptDescriptor myConceptBrackets = createDescriptorForBrackets();
  /*package*/ final ConceptDescriptor myConceptCallTo = createDescriptorForCallTo();
  /*package*/ final ConceptDescriptor myConceptConstraintSpec = createDescriptorForConstraintSpec();
  /*package*/ final ConceptDescriptor myConceptEnsuresSpec = createDescriptorForEnsuresSpec();
  /*package*/ final ConceptDescriptor myConceptEventAggregate = createDescriptorForEventAggregate();
  /*package*/ final ConceptDescriptor myConceptEventMethod = createDescriptorForEventMethod();
  /*package*/ final ConceptDescriptor myConceptEventRef = createDescriptorForEventRef();
  /*package*/ final ConceptDescriptor myConceptEventSpec = createDescriptorForEventSpec();
  /*package*/ final ConceptDescriptor myConceptForbiddenMethod = createDescriptorForForbiddenMethod();
  /*package*/ final ConceptDescriptor myConceptForbiddenSpec = createDescriptorForForbiddenSpec();
  /*package*/ final ConceptDescriptor myConceptFormalArg = createDescriptorForFormalArg();
  /*package*/ final ConceptDescriptor myConceptFormalArgs = createDescriptorForFormalArgs();
  /*package*/ final ConceptDescriptor myConceptFunctionCall = createDescriptorForFunctionCall();
  /*package*/ final ConceptDescriptor myConceptGeneric = createDescriptorForGeneric();
  /*package*/ final ConceptDescriptor myConceptIConstraintContent = createDescriptorForIConstraintContent();
  /*package*/ final ConceptDescriptor myConceptIEventSpecContent = createDescriptorForIEventSpecContent();
  /*package*/ final ConceptDescriptor myConceptIForbiddenContent = createDescriptorForIForbiddenContent();
  /*package*/ final ConceptDescriptor myConceptIMethodArg = createDescriptorForIMethodArg();
  /*package*/ final ConceptDescriptor myConceptIModelContent = createDescriptorForIModelContent();
  /*package*/ final ConceptDescriptor myConceptIObjectsContent = createDescriptorForIObjectsContent();
  /*package*/ final ConceptDescriptor myConceptIOrderSpecContent = createDescriptorForIOrderSpecContent();
  /*package*/ final ConceptDescriptor myConceptInSet = createDescriptorForInSet();
  /*package*/ final ConceptDescriptor myConceptInstacenOf = createDescriptorForInstacenOf();
  /*package*/ final ConceptDescriptor myConceptJavaQualifiedName = createDescriptorForJavaQualifiedName();
  /*package*/ final ConceptDescriptor myConceptLength = createDescriptorForLength();
  /*package*/ final ConceptDescriptor myConceptMethodDef = createDescriptorForMethodDef();
  /*package*/ final ConceptDescriptor myConceptModel = createDescriptorForModel();
  /*package*/ final ConceptDescriptor myConceptNegatesSpec = createDescriptorForNegatesSpec();
  /*package*/ final ConceptDescriptor myConceptNoCallTo = createDescriptorForNoCallTo();
  /*package*/ final ConceptDescriptor myConceptNotHardCoded = createDescriptorForNotHardCoded();
  /*package*/ final ConceptDescriptor myConceptObject = createDescriptorForObject();
  /*package*/ final ConceptDescriptor myConceptObjectSpec = createDescriptorForObjectSpec();
  /*package*/ final ConceptDescriptor myConceptObjectTypeParam = createDescriptorForObjectTypeParam();
  /*package*/ final ConceptDescriptor myConceptOrderSpec = createDescriptorForOrderSpec();
  /*package*/ final ConceptDescriptor myConceptParameterizedType = createDescriptorForParameterizedType();
  /*package*/ final ConceptDescriptor myConceptRequiresSpec = createDescriptorForRequiresSpec();
  /*package*/ final ConceptDescriptor myConceptSimpleType = createDescriptorForSimpleType();
  /*package*/ final ConceptDescriptor myConceptSpec = createDescriptorForSpec();
  /*package*/ final ConceptDescriptor myConceptValue = createDescriptorForValue();
  /*package*/ final ConceptDescriptor myConceptWildcardArg = createDescriptorForWildcardArg();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeID = new ConstrainedStringDatatypeDescriptorImpl(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL, "ID", "r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/9111215912466141389", "([a-z]|[A-Z]|_)([a-z]|[A-Z]|_|[0-9])*");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeTestName = new ConstrainedStringDatatypeDescriptorImpl(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x78aeadf61b0e1fbL, "TestName", "r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/543504950189154811", "^[a-z][a-z0-9_]*(\\.[a-z0-9_]+)+$");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAggregateList, myConceptAtomicContraintExp, myConceptBaseSpecType, myConceptBrackets, myConceptCallTo, myConceptConstraintSpec, myConceptEnsuresSpec, myConceptEventAggregate, myConceptEventMethod, myConceptEventRef, myConceptEventSpec, myConceptForbiddenMethod, myConceptForbiddenSpec, myConceptFormalArg, myConceptFormalArgs, myConceptFunctionCall, myConceptGeneric, myConceptIConstraintContent, myConceptIEventSpecContent, myConceptIForbiddenContent, myConceptIMethodArg, myConceptIModelContent, myConceptIObjectsContent, myConceptIOrderSpecContent, myConceptInSet, myConceptInstacenOf, myConceptJavaQualifiedName, myConceptLength, myConceptMethodDef, myConceptModel, myConceptNegatesSpec, myConceptNoCallTo, myConceptNotHardCoded, myConceptObject, myConceptObjectSpec, myConceptObjectTypeParam, myConceptOrderSpec, myConceptParameterizedType, myConceptRequiresSpec, myConceptSimpleType, myConceptSpec, myConceptValue, myConceptWildcardArg);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AggregateList:
        return myConceptAggregateList;
      case LanguageConceptSwitch.AtomicContraintExp:
        return myConceptAtomicContraintExp;
      case LanguageConceptSwitch.BaseSpecType:
        return myConceptBaseSpecType;
      case LanguageConceptSwitch.Brackets:
        return myConceptBrackets;
      case LanguageConceptSwitch.CallTo:
        return myConceptCallTo;
      case LanguageConceptSwitch.ConstraintSpec:
        return myConceptConstraintSpec;
      case LanguageConceptSwitch.EnsuresSpec:
        return myConceptEnsuresSpec;
      case LanguageConceptSwitch.EventAggregate:
        return myConceptEventAggregate;
      case LanguageConceptSwitch.EventMethod:
        return myConceptEventMethod;
      case LanguageConceptSwitch.EventRef:
        return myConceptEventRef;
      case LanguageConceptSwitch.EventSpec:
        return myConceptEventSpec;
      case LanguageConceptSwitch.ForbiddenMethod:
        return myConceptForbiddenMethod;
      case LanguageConceptSwitch.ForbiddenSpec:
        return myConceptForbiddenSpec;
      case LanguageConceptSwitch.FormalArg:
        return myConceptFormalArg;
      case LanguageConceptSwitch.FormalArgs:
        return myConceptFormalArgs;
      case LanguageConceptSwitch.FunctionCall:
        return myConceptFunctionCall;
      case LanguageConceptSwitch.Generic:
        return myConceptGeneric;
      case LanguageConceptSwitch.IConstraintContent:
        return myConceptIConstraintContent;
      case LanguageConceptSwitch.IEventSpecContent:
        return myConceptIEventSpecContent;
      case LanguageConceptSwitch.IForbiddenContent:
        return myConceptIForbiddenContent;
      case LanguageConceptSwitch.IMethodArg:
        return myConceptIMethodArg;
      case LanguageConceptSwitch.IModelContent:
        return myConceptIModelContent;
      case LanguageConceptSwitch.IObjectsContent:
        return myConceptIObjectsContent;
      case LanguageConceptSwitch.IOrderSpecContent:
        return myConceptIOrderSpecContent;
      case LanguageConceptSwitch.InSet:
        return myConceptInSet;
      case LanguageConceptSwitch.InstacenOf:
        return myConceptInstacenOf;
      case LanguageConceptSwitch.JavaQualifiedName:
        return myConceptJavaQualifiedName;
      case LanguageConceptSwitch.Length:
        return myConceptLength;
      case LanguageConceptSwitch.MethodDef:
        return myConceptMethodDef;
      case LanguageConceptSwitch.Model:
        return myConceptModel;
      case LanguageConceptSwitch.NegatesSpec:
        return myConceptNegatesSpec;
      case LanguageConceptSwitch.NoCallTo:
        return myConceptNoCallTo;
      case LanguageConceptSwitch.NotHardCoded:
        return myConceptNotHardCoded;
      case LanguageConceptSwitch.Object:
        return myConceptObject;
      case LanguageConceptSwitch.ObjectSpec:
        return myConceptObjectSpec;
      case LanguageConceptSwitch.ObjectTypeParam:
        return myConceptObjectTypeParam;
      case LanguageConceptSwitch.OrderSpec:
        return myConceptOrderSpec;
      case LanguageConceptSwitch.ParameterizedType:
        return myConceptParameterizedType;
      case LanguageConceptSwitch.RequiresSpec:
        return myConceptRequiresSpec;
      case LanguageConceptSwitch.SimpleType:
        return myConceptSimpleType;
      case LanguageConceptSwitch.Spec:
        return myConceptSpec;
      case LanguageConceptSwitch.Value:
        return myConceptValue;
      case LanguageConceptSwitch.WildcardArg:
        return myConceptWildcardArg;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myCSDatatypeID, myCSDatatypeTestName);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAggregateList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "AggregateList", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1b51b988bd4ce8dfL);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/1968558509080242399");
    b.version(2);
    b.aggregate("refs", 0x1b51b988bd4cead4L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1b51b988bd4cea81L).optional(true).ordered(true).multiple(true).origin("1968558509080242900").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAtomicContraintExp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "AtomicContraintExp", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae891d530L);
    b.interface_();
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae87d14c2L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/1004539440856581745");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseSpecType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "BaseSpecType", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6a2beeL);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/9111215912465869806");
    b.version(2);
    b.aggregate("name", 0x7e718a995e6a2d31L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x379a88c795f4e8bdL).optional(false).ordered(true).multiple(false).origin("9111215912465870129").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBrackets() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Brackets", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0xdf0d74c972044c6L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae891d530L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/1004539440856581318");
    b.version(2);
    b.aggregate("exp", 0xdf0d74c97204517L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae87d14c2L).optional(false).ordered(true).multiple(false).origin("1004539440856581399").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCallTo() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "CallTo", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae884b2a3L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae87d14c2L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/6570391813126140579");
    b.version(2);
    b.property("method", 0x5b2eb88ae884b30aL).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL)).origin("6570391813126140682").done();
    b.alias("callTo");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "ConstraintSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x38bdb626f91808b8L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4088624315226392760");
    b.version(2);
    b.aggregate("constraints", 0x5b2eb88ae87d1513L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae87d14c2L).optional(true).ordered(true).multiple(true).origin("6570391813125641491").done();
    b.alias("CONSTRAINTS");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnsuresSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "EnsuresSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x38bdb626f9180996L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4088624315226392982");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventAggregate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "EventAggregate", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x2cacad8f8a455d07L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c209L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/3219138665674792199");
    b.version(2);
    b.aggregate("aggregate", 0x1b51b988bd4ce8ddL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1b51b988bd4ce8dfL).optional(true).ordered(true).multiple(true).origin("1968558509080242397").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventMethod() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "EventMethod", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x2cacad8f8a455d04L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c209L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/3219138665674792196");
    b.version(2);
    b.aggregate("method", 0x6a7299853d07fdceL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x6a7299853d07fd7dL).optional(true).ordered(true).multiple(false).origin("7670361912899009998").done();
    b.alias("EventMethod");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "EventRef", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x1b51b988bd4cea81L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/1968558509080242817");
    b.version(2);
    b.associate("label", 0x1b51b988bd4cea96L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c209L).optional(false).origin("1968558509080242838").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "EventSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c1ffL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b7e3cL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/8598353117207511551");
    b.version(2);
    b.aggregate("content", 0x77537c9aa486c226L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c209L).optional(true).ordered(true).multiple(true).origin("8598353117207511590").done();
    b.alias("EVENTS");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForForbiddenMethod() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "ForbiddenMethod", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae876c9b2L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae876c9c7L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/6570391813125228978");
    b.version(2);
    b.property("alternative", 0x5b2eb88ae87a69c7L).type(PrimitiveTypeId.STRING).origin("6570391813125466567").done();
    b.aggregate("method", 0x5b2eb88ae876caa8L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x6a7299853d07fd7dL).optional(true).ordered(true).multiple(false).origin("6570391813125229224").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForForbiddenSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "ForbiddenSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x38bdb626f91809fbL);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4088624315226393083");
    b.version(2);
    b.aggregate("forbidenMethods", 0x5b2eb88ae876c988L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae876c9b2L).optional(true).ordered(true).multiple(true).origin("6570391813125228936").done();
    b.alias("FORBIDDEN");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFormalArg() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "FormalArg", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x34938cadab1317eaL);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x6a7299853d0ad109L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/3788526389076105194");
    b.version(2);
    b.property("argument", 0x34938cadab1317ffL).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL)).origin("3788526389076105215").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFormalArgs() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "FormalArgs", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0xdf0d74c9723b20bL);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/1004539440856805899");
    b.version(2);
    b.aggregate("args", 0xdf0d74c97293b4aL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x6a7299853d0ad109L).optional(true).ordered(true).multiple(true).origin("1004539440857168714").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "FunctionCall", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0xdf0d74c972045e4L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae891d530L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/1004539440856581604");
    b.version(2);
    b.property("methodName", 0xdf0d74c97204736L).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL)).origin("1004539440856581942").done();
    b.aggregate("exp", 0xdf0d74c97204760L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x6a7299853d0ad109L).optional(true).ordered(true).multiple(true).origin("1004539440856581984").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGeneric() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Generic", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5e5e66f7ea78d0e2L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/6799985702352769250");
    b.version(2);
    b.alias("Generic");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIConstraintContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IConstraintContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae87d14c2L);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/6570391813125641410");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIEventSpecContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IEventSpecContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c209L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/8598353117207511561");
    b.version(2);
    b.property("label", 0x5b2eb88ae86d20ddL).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL)).origin("6570391813124595933").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIForbiddenContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IForbiddenContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae876c9c7L);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/6570391813125228999");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIMethodArg() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IMethodArg", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x6a7299853d0ad109L);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/3788526389076167503");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIModelContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IModelContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b7e3cL);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/5292687979099946556");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIObjectsContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IObjectsContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53be40fL);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/5292687979099972623");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIOrderSpecContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "IOrderSpecContent", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa48770b3L);
    b.interface_();
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/8598353117207556275");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInSet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "InSet", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae891d4edL);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae87d14c2L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/6570391813127001325");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstacenOf() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "InstacenOf", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae88e611bL);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae87d14c2L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/6570391813126775067");
    b.version(2);
    b.property("var", 0x5b2eb88ae88e6182L).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL)).origin("6570391813126775170").done();
    b.property("varType", 0x5b2eb88ae88e6186L).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL)).origin("6570391813126775174").done();
    b.alias("instanceOf");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForJavaQualifiedName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "JavaQualifiedName", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x379a88c795f4e8bdL);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4006665209295202493");
    b.version(2);
    b.property("name", 0x78aeadf61b0e351L).type(PrimitiveTypeId.STRING).origin("543504950189155153").done();
    b.alias("JavaQualifiedName");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLength() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Length", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae88b14fbL);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae87d14c2L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/6570391813126558971");
    b.version(2);
    b.property("var", 0x5b2eb88ae88b1526L).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL)).origin("6570391813126559014").done();
    b.alias("length");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMethodDef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "MethodDef", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x6a7299853d07fd7dL);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/7670361912899009917");
    b.version(2);
    b.property("methodName", 0x6a7299853d08e65dL).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL)).origin("7670361912899069533").done();
    b.aggregate("args", 0xdf0d74c9723b208L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0xdf0d74c9723b20bL).optional(true).ordered(true).multiple(false).origin("1004539440856805896").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Model", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x379a88c795f4c97eL);
    b.class_(false, true, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4006665209295202465");
    b.version(2);
    b.alias("Model");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNegatesSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "NegatesSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x38bdb626f918de70L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4088624315226447472");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNoCallTo() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "NoCallTo", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae883277dL);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae87d14c2L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/6570391813126039421");
    b.version(2);
    b.property("method", 0x5b2eb88ae88327e4L).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL)).origin("6570391813126039524").done();
    b.alias("noCallTo");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNotHardCoded() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "NotHardCoded", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae887da8aL);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae87d14c2L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/6570391813126347402");
    b.version(2);
    b.property("var", 0x5b2eb88ae887db23L).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL)).origin("6570391813126347555").done();
    b.alias("notHardCoded");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObject() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Object", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x6fe8a826085f2877L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53be40fL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/8063880014109550711");
    b.version(2);
    b.property("name", 0x6fe8a826085f287eL).type(MetaIdFactory.dataTypeId(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6e50cdL)).origin("8063880014109550718").done();
    b.aggregate("objectType", 0x6fe8a826085f2880L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x379a88c795f4e8bdL).optional(false).ordered(true).multiple(false).origin("8063880014109550720").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObjectSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "ObjectSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b99c1L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b7e3cL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/5292687979099953601");
    b.version(2);
    b.aggregate("contents", 0x497367acd53be42aL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53be40fL).optional(true).ordered(true).multiple(true).origin("5292687979099972650").done();
    b.alias("OBJECTS");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObjectTypeParam() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "ObjectTypeParam", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e69f583L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/9111215912465855875");
    b.version(2);
    b.property("type", 0x7e718a995e69f598L).type(PrimitiveTypeId.STRING).origin("9111215912465855896").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrderSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "OrderSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa48770aeL);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b7e3cL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/8598353117207556270");
    b.version(2);
    b.aggregate("content", 0x77537c9aa48770b1L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa48770b3L).optional(true).ordered(true).multiple(true).origin("8598353117207556273").done();
    b.alias("ORDER");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParameterizedType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "ParameterizedType", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6a2e9cL);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6a2beeL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/9111215912465870492");
    b.version(2);
    b.property("typeParameter", 0x7e718a995e6a2edfL).type(PrimitiveTypeId.STRING).origin("9111215912465870559").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRequiresSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "RequiresSpec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x38bdb626f9180931L);
    b.class_(false, false, false);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/4088624315226392881");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimpleType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "SimpleType", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6a2d97L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6a2beeL);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/9111215912465870231");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Spec", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x3063bd30217d1129L);
    b.class_(false, false, true);
    b.super_("MetaCrySL.structure.Model", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x379a88c795f4c97eL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/9111215912465734338");
    b.version(2);
    b.property("ABSTRACT", 0x497367acd53c2433L).type(PrimitiveTypeId.BOOLEAN).origin("5292687979099989043").done();
    b.aggregate("classType", 0x379a88c795f4e8c2L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x7e718a995e6a2beeL).optional(false).ordered(true).multiple(false).origin("4006665209295202498").done();
    b.aggregate("objects", 0x77537c9aa4898d17L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b99c1L).optional(false).ordered(true).multiple(false).origin("8598353117207694615").done();
    b.aggregate("events", 0x38bdb626f9180837L).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa486c1ffL).optional(false).ordered(true).multiple(false).origin("4088624315226392631").done();
    b.aggregate("order", 0x38bdb626f918089fL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x77537c9aa48770aeL).optional(false).ordered(true).multiple(false).origin("4088624315226392735").done();
    b.aggregate("forbidden", 0x5b2eb88ae876c89bL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x38bdb626f91809fbL).optional(true).ordered(true).multiple(false).origin("6570391813125228699").done();
    b.aggregate("contraint", 0x5b2eb88ae87d156aL).target(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x38bdb626f91808b8L).optional(true).ordered(true).multiple(false).origin("6570391813125641578").done();
    b.alias("SPEC");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "Value", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0xdf0d74c97204397L);
    b.interface_();
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x5b2eb88ae891d530L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/1004539440856598373");
    b.version(2);
    b.property("value", 0xdf0d74c9720444cL).type(PrimitiveTypeId.STRING).origin("1004539440856581196").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWildcardArg() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MetaCrySL", "WildcardArg", 0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x34938cadab131362L);
    b.class_(false, false, false);
    b.parent(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x6a7299853d0ad109L);
    b.origin("r:dcee7ccb-1ec0-4645-b24f-ab498bf018f7(MetaCrySL.structure)/3788526389076104034");
    b.version(2);
    b.alias("_");
    return b.create();
  }
}
