package MetaCrySL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_IModelContent;
  private ConceptPresentation props_Model;
  private ConceptPresentation props_ObjectSpec;
  private ConceptPresentation props_QualifiedName;
  private ConceptPresentation props_Spec;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.IModelContent:
        if (props_IModelContent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IModelContent = cpb.create();
        }
        return props_IModelContent;
      case LanguageConceptSwitch.Model:
        if (props_Model == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Model = cpb.create();
        }
        return props_Model;
      case LanguageConceptSwitch.ObjectSpec:
        if (props_ObjectSpec == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("OBJECTS");
          props_ObjectSpec = cpb.create();
        }
        return props_ObjectSpec;
      case LanguageConceptSwitch.QualifiedName:
        if (props_QualifiedName == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("JavaQualifiedName");
          props_QualifiedName = cpb.create();
        }
        return props_QualifiedName;
      case LanguageConceptSwitch.Spec:
        if (props_Spec == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Spec = cpb.create();
        }
        return props_Spec;
    }
    return null;
  }
}
