package MetaCrySL.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class ObjectSpec_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("OBJECTS");
    tgs.newLine();
    for (SNode object : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.contents$qmDe))) {
      tgs.append("\t");
      tgs.appendNode(object);
      tgs.newLine();
    }
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink contents$qmDe = MetaAdapterFactory.getContainmentLink(0xfbc67e5cfd7043b1L, 0xb8373c3551c2500bL, 0x497367acd53b99c1L, 0x497367acd53be42aL, "contents");
  }
}
